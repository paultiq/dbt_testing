name: "Python Nightly 2 Tests"

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  tests:
    name: "${{ matrix.python-version }}"
    runs-on: "${{ matrix.os }}"
    # If it doesn't finish in an hour, it's not going to. Don't spin for six
    # hours needlessly.
    timeout-minutes: 60

    env:
      TOX_GH_MAJOR_MINOR: "${{ matrix.python-version }}"

    strategy:
      matrix:
        os:
          - "ubuntu-latest"

      fail-fast: false

    steps:
      - name: "Check out the repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: build-essential pkg-config ccache gdb lcov libb2-dev libbz2-dev libffi-dev libgdbm-dev libgdbm-compat-dev liblzma-dev libncurses5-dev libreadline6-dev libsqlite3-dev libssl-dev libzstd-dev lzma lzma-dev strace tk-dev uuid-dev xvfb zlib1g-dev
          version: 1.0
      - name: "Install pyenv"
        run: |
          curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
          export PYENV_ROOT="$HOME/.pyenv"

      - name: "Prepare cpython version"
        run: |
          export PYENV_ROOT="$HOME/.pyenv"


          cp "$PYENV_ROOT/plugins/python-build/share/python-build/3.12-dev" "$PYENV_ROOT/plugins/python-build/share/python-build/3.12-dev".orig

          sed -i 's|^install_git.*|install_package "Python-3.12-dev" "https://example.com/invalid"|' "$PYENV_ROOT/plugins/python-build/share/python-build/3.12-dev"

          git clone --branch v3.12.11 --single-branch https://github.com/python/cpython.git
          cd cpython
          git archive --format=tar --prefix=Python-3.12-dev/ HEAD | gzip > Python-3.12-dev.tar.gz
          mkdir -p $PYENV_ROOT/cache
          cp Python-3.12-dev.tar.gz $PYENV_ROOT/cache/

      - name: "Build Python"
        env:
          PYVER: "3.12-dev"
        run: |
          export MODULE_BUILDTYPE=static
          set -xe
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init --path)"
          pyenv install $PYVER -v
          sudo ln -sf $PYENV_ROOT/versions/$PYVER/bin/python3 /usr/local/bin/python
          # https://gist.github.com/dukenmarga/3b055616ecef3b38a52de0ad81b67c2a
          # said to:
          # sudo ln -s /usr/local/lib64/python3.12/lib-dynload /usr/local/lib/python3.12/lib-dynload
      - name: "What's in pyenv"
        run: |
          export PYENV_ROOT="$HOME/.pyenv"
          ls -lR $PYENV_ROOT/versions
      - name: "Try the thing"
        run: |
          python -c "import _posixsubprocess as psp; print(psp)"
      #- name: "What's in /usr/local/lib64"
      #  run: |
      #    export PYENV_ROOT="$HOME/.pyenv"
      #    ls -lR /usr/local/lib64
      #
      #- name: "What's in /usr/local/lib"
      #  run: |
      #    export PYENV_ROOT="$HOME/.pyenv"
      #    ls -lR /usr/local/lib

      - name: "Install Tox"
        run: |
          python -m pip install tox
      - name: "Run tox"
        run: |
          python -m tox -v -- -rfsEX