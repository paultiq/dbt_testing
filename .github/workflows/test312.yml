name: "Python Nightly 2 Tests"

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  tests:
    name: "${{ matrix.python-version }}"
    runs-on: "${{ matrix.os }}"
    # If it doesn't finish in an hour, it's not going to. Don't spin for six
    # hours needlessly.
    timeout-minutes: 60

    env:
      TOX_GH_MAJOR_MINOR: "${{ matrix.python-version }}"

    strategy:
      matrix:
        os:
          - "ubuntu-latest"
        python-version:
          - "3.12"

      fail-fast: false

    steps:
      - name: "Check out the repo"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: "Install system dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libbz2-dev libdb-dev libffi-dev libgdbm-dev liblzma-dev libncursesw5-dev libreadline-dev libsqlite3-dev libssl-dev libz-dev tk-dev zlib1g-dev
      - name: "Install pyenv"
        run: |
          curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
      - name: "Build Python ${{ matrix.python-version }}-dev"
        env:
          PYVER: "${{ matrix.python-version }}-dev"
        run: |
          set -xe
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init --path)"
          pyenv install $PYVER -v
          sudo ln -sf $PYENV_ROOT/versions/$PYVER/bin/python3 /usr/local/bin/python
          # https://gist.github.com/dukenmarga/3b055616ecef3b38a52de0ad81b67c2a
          # said to:
          # sudo ln -s /usr/local/lib64/python3.12/lib-dynload /usr/local/lib/python3.12/lib-dynload
      - name: "What's in pyenv"
        run: |
          export PYENV_ROOT="$HOME/.pyenv"
          ls -lR $PYENV_ROOT/versions
      - name: "Try the thing"
        run: |
          python -c "import _posixsubprocess as psp; print(psp)"
      #- name: "What's in /usr/local/lib64"
      #  run: |
      #    export PYENV_ROOT="$HOME/.pyenv"
      #    ls -lR /usr/local/lib64
      #
      #- name: "What's in /usr/local/lib"
      #  run: |
      #    export PYENV_ROOT="$HOME/.pyenv"
      #    ls -lR /usr/local/lib

      - name: "Install Tox"
        run: |
          python -m pip install tox
      - name: "Run tox"
        run: |
          python -m tox -v -- -rfsEX